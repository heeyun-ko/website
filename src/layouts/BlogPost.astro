---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

interface Props {
	title: string;
	description: string;
	pubDate: Date;
	updatedDate?: Date;
	heroImage?: string;
	meta_title?: string;
	meta_description?: string;
	keywords?: string[];
	og_title?: string;
	og_description?: string;
	og_type?: string;
	twitter_card?: string;
}

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: 100%;
				max-width: 960px;
				margin: 0 auto;
				padding: 1rem;
				margin-top: 160px;
			}
			.title {
				font-size: 2.5em;
				margin: 0;
				padding: 0 1rem;
			}
			.date {
				margin-bottom: 1em;
				color: rgb(var(--gray));
				padding: 0 1rem;
			}
			.last-updated-on {
				font-style: italic;
			}
			.prose {
				width: 100%;
				max-width: none;
				margin: 0 auto;
				padding: 0 1rem;
			}
			img {
				width: 100%;
				height: auto;
				border-radius: 12px;
				margin: 1em 0;
			}
			article {
				max-width: 800px;
				margin-inline: auto;
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				{heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
				<h1 class="title">{title}</h1>
				<div class="date">
					<FormattedDate date={pubDate} />
					{
						updatedDate && (
							<div class="last-updated-on">
								Last updated on <FormattedDate date={updatedDate} />
							</div>
						)
					}
				</div>
				<div class="prose">
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html> 