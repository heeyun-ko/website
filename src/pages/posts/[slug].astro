---
<<<<<<< Updated upstream
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
=======
>>>>>>> Stashed changes
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE } from '../../consts';
<<<<<<< Updated upstream
import BlogPost from '../../layouts/BlogPost.astro';

export async function getStaticPaths() {
	const blogEntries = await getCollection('posts');
	return blogEntries.map(entry => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
=======
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';

export async function getStaticPaths() {
	const posts = await getCollection('posts');
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: { post },
	}));
}

const { post } = Astro.props;
const { Content } = await post.render();

// SEO metadata
const pageTitle = `${post.data.title} - ${SITE_TITLE}`;
const pageDescription = post.data.description;
const keywords = post.data.keywords || [];
const ogType = 'article';
const twitterCard = 'summary_large_image';
>>>>>>> Stashed changes
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead 
<<<<<<< Updated upstream
			title={`${entry.data.title} - ${SITE_TITLE}`}
			description={entry.data.description}
=======
			title={pageTitle} 
			description={pageDescription} 
			keywords={keywords}
			ogType={ogType}
			twitterCard={twitterCard}
>>>>>>> Stashed changes
		/>
	</head>
	<body>
		<Header />
<<<<<<< Updated upstream
		<main>
			<BlogPost {...entry.data}>
				<div class="post-content">
					<Content />
				</div>
			</BlogPost>
		</main>
		<Footer />
	</body>
</html>

<style>
	main {
		width: 100%;
		max-width: 960px;
		margin: 0 auto;
		padding: 3rem 1rem;
	}

	.post {
		width: 100%;
	}

	.post-header {
		text-align: center;
		margin-bottom: 3rem;
	}

	h1 {
		font-size: 3rem;
		font-weight: 700;
		line-height: 1.2;
		margin-bottom: 1rem;
		color: rgb(var(--black));
	}

	time {
		font-size: 1.1rem;
		color: rgb(var(--gray-dark));
	}

	.post-content {
		margin-top: 160px;
		padding: 0 2rem;
		max-width: 800px;
		margin-inline: auto;
	}

	.post-content :global(h2) {
		font-size: 2rem;
		font-weight: 700;
		margin: 2rem 0 1rem;
	}

	.post-content :global(p) {
		margin-bottom: 1.5rem;
	}

	.post-content :global(ul) {
		margin-bottom: 1.5rem;
		padding-left: 1.5rem;
	}

	.post-content :global(li) {
		margin-bottom: 0.5rem;
	}

	@media (max-width: 768px) {
		main {
			padding: 2rem 1rem;
		}

		h1 {
			font-size: 2.5rem;
		}

		.post-content {
			font-size: 1rem;
		}
	}

	@media (max-width: 480px) {
		main {
			padding: 1.5rem 1rem;
		}

		h1 {
			font-size: 2rem;
		}
	}
</style> 
=======
		<div class="page-container">
			<main>
				<article>
					<header>
						<h1>{post.data.title}</h1>
						<p class="date">
							<FormattedDate date={post.data.pubDate} />
						</p>
					</header>
					<Content />
				</article>
			</main>
			<Footer />
		</div>
	</body>
</html> 
>>>>>>> Stashed changes
